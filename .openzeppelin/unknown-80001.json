{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2c3C4D0608aec8eB4ac4BAE5856a6468700237Dd",
    "txHash": "0x4d19449bdf96528490b23fbb64f24904e82e0557e8a33e2c9e1cd12df2c6fd29"
  },
  "proxies": [
    {
      "address": "0xc1C096424a16c9B3fa01B734eF08ca1D99B0f454",
      "txHash": "0x18e556e51476d3004f01ee4691f5d308f7941e283d30a3cfb869f3a6d7eebe0c",
      "kind": "transparent"
    },
    {
      "address": "0xC6Fb19e7d7f6AEf48CE6395BCb4b58f666F6e7f8",
      "txHash": "0xa447c61b27458fdac39a641567d6e57ee1c7cd6e509b3bbd6f31b43489427bf6",
      "kind": "transparent"
    },
    {
      "address": "0x4C35C72909240A5435D9c8b94Caf3b305FFD5D97",
      "txHash": "0x5c0e06a1dc5d50255b89d54f3e7e6f3e9c3911570341abf0c1fac034f61e66d4",
      "kind": "transparent"
    },
    {
      "address": "0xF3ea00c6B33D6FDF5eb59a9920e640f521555122",
      "txHash": "0x7cd7757b3ac50320ac51b6b0dc5f82db28f49f13c7d2c607b5f8faa7ed874a42",
      "kind": "transparent"
    },
    {
      "address": "0xED619b1Add91DD35e63Df026838e725510dd9244",
      "txHash": "0xefe9e04caa32596c0b3f5dcb1a1db959a7609403eea9e7392eb5a0493d1d11c0",
      "kind": "transparent"
    },
    {
      "address": "0x6DD59776fcbb4e41B2d2b19e0859c7dF1dA85AfB",
      "txHash": "0x070a5c9201148d59e8f083593380b859e88a6cb833c5655879249038734ac0d0",
      "kind": "transparent"
    },
    {
      "address": "0x87247a2F25aa85DdD75b747f8caD685234F3c6E2",
      "txHash": "0x0fe70cd1fffa476d0efaab513188f367505a0e6f7d2a44f6c2e88c904228253a",
      "kind": "transparent"
    },
    {
      "address": "0xd3D63Eb1C564849CB0ED12700C9AEb37f2EA773B",
      "txHash": "0xaa094ebb2eaadd661d5eed5036535620ea4d06f218383031e6a1db15816f3c5f",
      "kind": "transparent"
    },
    {
      "address": "0xb639A2621f442216B88e2AF00fad00A8A2Bb124c",
      "txHash": "0xaaad2e967158119dae3df889885adb2398d3be7bd6ea6844d42188f3e310fb24",
      "kind": "transparent"
    },
    {
      "address": "0xE024A9eEBD06620C485ec35247778140A3539a06",
      "txHash": "0x4bc50094024242e222635a40e2f397afa0f18bfd39fa946b1a5acb1d107cee92",
      "kind": "transparent"
    },
    {
      "address": "0xF0b9A5d70609Ea1fDC85c6295821AF368dBB57b5",
      "txHash": "0x92eef0b3031ea0a54f7c7b6d1e22b1a396e6eabd4e244d5fb05f85a4a0c27312",
      "kind": "transparent"
    },
    {
      "address": "0x38067623c59CEBe3AF08D68EF8d6BfA99D8B1fd6",
      "txHash": "0xedf8b5776412c3c9102b99fc293b813a59028e888b7cd09285275be0f0b5cc8f",
      "kind": "transparent"
    },
    {
      "address": "0x42b2097CF8DAeD1514d4B750f2038947027B7f1F",
      "txHash": "0x32c71d6570523da376836182a8bbacd7071e859c2aecbe63836c3392ebde5f76",
      "kind": "transparent"
    },
    {
      "address": "0x1eD9C7AB971bb220ff83dEf635C5A8b5F93746Be",
      "txHash": "0xcdc0967dffb95d60ec252df014665b0ee18a974887c03f0111324053d5dd3b58",
      "kind": "transparent"
    },
    {
      "address": "0xB808c0C49Da0530D4acbd9e4E97c590B8Eee4e64",
      "txHash": "0x993433cd5820cead2e257e1e1dc78193a10d562716c5fcfef352dee59a3deddc",
      "kind": "transparent"
    },
    {
      "address": "0x04D8e87c75B6744AF3DC2Fe078595722F0802760",
      "txHash": "0xfb58127a2c98cff987bd77a2dd783ad5f0109c3215a6597b834c6ef84d94570a",
      "kind": "transparent"
    },
    {
      "address": "0x0192f1eA559cC58D075377626334CAac27D73f82",
      "txHash": "0x4e680ace84a48e4aeffb8c77ea304754b0b6d4ca8cb2200eafca0199dec701bb",
      "kind": "transparent"
    },
    {
      "address": "0xeF60316d1b9899Bde0f83db972c1a26909130388",
      "txHash": "0x404cd5c962e7c6d9950ce0f98f94782d0d6f7a74ea004f4f241d21bd09fb4a2a",
      "kind": "transparent"
    },
    {
      "address": "0x38c98c9783b037B556f3738E861C2cE614b9Bd14",
      "txHash": "0xe9bd45cdd422f8ebce9655c9b7a31b08fb940ad255d89828a5d2c0544444815f",
      "kind": "transparent"
    },
    {
      "address": "0xfe63270f25c05AaE86469b9ce6Ecaa7Feb5B635E",
      "txHash": "0x7af1736816a3b0e6c4246d4eeabcd8acd30beb5acee16c5e2c1ded72738db880",
      "kind": "transparent"
    },
    {
      "address": "0x391e4197495e74eBc1273333ABD6aB9eDd1C703f",
      "txHash": "0x5f24df97fb62b4d9902bf67111722b4cf82adc48e7a031089da4470548df65d3",
      "kind": "transparent"
    },
    {
      "address": "0x3Ce9606e08E6eC815ef6737d37903A46AFF6A22a",
      "txHash": "0x329ddb1a1019319373864df1468a90998675339a59087f2df78e8e92d05b127f",
      "kind": "transparent"
    },
    {
      "address": "0xf6C6A716F1003107bFbf71F3EF028Ffaf8756793",
      "txHash": "0x14dd4cb5f1a43cd4db1301080d342c00b708fe05ba3f33c78fa1f2cf3cbdf5bc",
      "kind": "transparent"
    },
    {
      "address": "0xfdfC4067e87875434b33629F9156077fa965Ebb0",
      "txHash": "0xe5d1a10232f95353bbde1d5920805ef09a4c8f31124c7561ec36b305d2fdb2a0",
      "kind": "transparent"
    },
    {
      "address": "0x035ff4a6eDa231eC8D30e7A457579D59F674E414",
      "txHash": "0x5a7bd7827cf87309c0725890344b7e897efd050b8d3075119d1d4b27bd0942c3",
      "kind": "transparent"
    },
    {
      "address": "0x201016D13a4692FCB1A2BaB0b16FEFBe25396f76",
      "txHash": "0xf9b5f021bd956990d7656b9dc8c04932daa5c05c15f62b92825c0fd07dcbc831",
      "kind": "transparent"
    },
    {
      "address": "0x52BD6BACc40020C153d8B59dB903B7C90928383b",
      "txHash": "0xa728f23c1cbcb4f73767ea773268d64ed344f0a6ba60e2b8791ddf19f3b33370",
      "kind": "transparent"
    },
    {
      "address": "0x0899BB5B33b8AE13e9E05BCa8417816C756c125e",
      "txHash": "0x352ba2f927961bacfb908f31797981b2417181db1cf00c5cadfd55185e02255f",
      "kind": "transparent"
    },
    {
      "address": "0x03e57F85B962E2e879c33DF3e10A3ce5Cd7431EF",
      "txHash": "0x2c90a9d40ad78a22a7756005e94db88b9648fb050d732d89f5b4fd977eee8a05",
      "kind": "transparent"
    },
    {
      "address": "0xe69B49A1892B09e8c4f4D80Ec22df16356E22CFb",
      "txHash": "0xf6e76c128a6c05ef4ff53007d53be252114a80da6e77e6b80a62e902c7f4baf5",
      "kind": "transparent"
    },
    {
      "address": "0xe1De3003D0853c5EC9927B8A2d5ad97ab5d0b0b2",
      "txHash": "0x8b91cac3a6d3c7a55e413db16f8dedc71b7e04709bbc66ee6cd5793eab4b58e7",
      "kind": "transparent"
    },
    {
      "address": "0xdE01Ebf2DF9a563512F8C86d76893c8148678205",
      "txHash": "0xc8f1ab60cf87e6ff3ef64e616e354e69942b3690970c9644379860ce824546f0",
      "kind": "transparent"
    },
    {
      "address": "0xD68cD46D7f60Ac4F8Dac6149AdF1E0F8051d8627",
      "txHash": "0xe39b096e9cd6b23ed6e00d0021ed7bb7af4400a509618029e9c301e813428dbc",
      "kind": "transparent"
    },
    {
      "address": "0x11475dCB1D0340d5B3DbBb17583cE0Fb1A4273f4",
      "txHash": "0x28c39c8fe378f06125a5d8ad0ad6921dcc773a79ddf87696e34ba32754278a02",
      "kind": "transparent"
    },
    {
      "address": "0xcc9EE7d210fCAE31481653d213A60ad9E569e9F1",
      "txHash": "0x8451be828c13f571ac268586d27b07eb1c6ed01296cba48108bb36d5dd95a85e",
      "kind": "transparent"
    },
    {
      "address": "0xe80e973669667Aa6C5b0F3b4a738fF5FcC22D6C1",
      "txHash": "0x20371b830ddb9274d1c3b47e216b5f36dbb79cea85ec90763a4e5abb452d34a4",
      "kind": "transparent"
    },
    {
      "address": "0x72F9Dc9BC412C1051B59E419895f2a60e42120A8",
      "txHash": "0xa725ea586fa15b58d72511de63ac25e0e2b81a29a36e4faa3903627e7829aea3",
      "kind": "transparent"
    },
    {
      "address": "0x4fa261F3BC660325bb64c610f9E30aa4e86997f0",
      "txHash": "0xdc2efbb8bd389f63ba51f49de3115280084dbc22d85a5f1550762a6d03db764b",
      "kind": "transparent"
    },
    {
      "address": "0xb3A6E9070A0dFA461cFd841F71d5d54EdFEABA68",
      "txHash": "0x518a1c39f2305e1746989e8965c78428bcfb43e3d3345af79fc9ce03e72116c4",
      "kind": "transparent"
    },
    {
      "address": "0x73AE57Efdb47ac0C9ED949cfC17d028E02788Ba9",
      "txHash": "0xc02918ab18321d5cfcfd4ce5b53c3683816e113a99c49f22503fa4999ab1634d",
      "kind": "transparent"
    },
    {
      "address": "0xF562590D90ee1C31D30d6df4Df7e74b3eEa8a425",
      "txHash": "0xc4ecbe21470cdff362e636707f74d3132533a282e39c87bf3655dab17e1af977",
      "kind": "transparent"
    },
    {
      "address": "0x502B295f6B2d94Be596fDd05626c5c336dF85b3a",
      "txHash": "0xb7610a0b8ad446d5ea2f62459a6f51205ae55d9f93654b4c2627865588030f60",
      "kind": "transparent"
    },
    {
      "address": "0x42A9B08CcAf0Bac63440C77a7e5521F59043e7a2",
      "txHash": "0x705eb2f39aea50cecb97c0036314785e559fae0b9c7ac269b6d962196a0f3cf1",
      "kind": "transparent"
    },
    {
      "address": "0xdDc42202A781ce9b0Bd5D085E37d909785752237",
      "txHash": "0xd87c2b495f5197be3f29cb8ec4ca28f182d7f297c5ca6930fec708b987b84aa3",
      "kind": "transparent"
    },
    {
      "address": "0x5717be90De87046863fEF34930AA5315a1fFf60D",
      "txHash": "0xf740bd090a4fb65c7730f31334292274064f9ab424c196576c08d8d50c7a1cad",
      "kind": "transparent"
    },
    {
      "address": "0x45CbDe3e3bFBDc85232D96a674B89e48Aa76a0FA",
      "txHash": "0x546c6d235764ac45e8bb62aaf56408770429b9f50588401d3a2ad085d9c41cc2",
      "kind": "transparent"
    },
    {
      "address": "0x13EF0265297179556E6324790c3b9Add6c03B4b1",
      "txHash": "0x2678d05a95c8e81783fb28df8e3f5bb1e8d0123800726b864ed60e5ad0e38b7c",
      "kind": "transparent"
    },
    {
      "address": "0xD9771934F49AF209Ec7A1308a0601121E8aAA2E1",
      "txHash": "0xdcf1f691838cfafde8e6203655e8c44fcf288a2fffa013e64a93746731c15aad",
      "kind": "transparent"
    },
    {
      "address": "0x213FaD703DEa8FbB80A6248247348Cc755a6956B",
      "txHash": "0x414b91d15a9a2ad7e6b0fbb91d04eb142c566d0c5b6ad6af8047273e6271a74c",
      "kind": "transparent"
    },
    {
      "address": "0xbc84a56Ba24B946027f6455C27dCA0a2C4570932",
      "txHash": "0x08e34d470bc14042ef0fd71db6a76866eaa8f4103e2d4dd9023f5777133f8f67",
      "kind": "transparent"
    },
    {
      "address": "0x280e25cDab8D38Eba37886eEDaea9B5c85Ea842e",
      "txHash": "0x7c0b7818b9b6c3dfb0172afa3c601a50f02b125fdb520c53d10a80b7db21d59f",
      "kind": "transparent"
    },
    {
      "address": "0xDCC0bAEdD7cF44c847032223C268bEEa78D2c936",
      "txHash": "0x3c502fe114800340016407cbe1714a20e2cf4cacfd535513b99d403a2515b950",
      "kind": "transparent"
    },
    {
      "address": "0x54cc52508A88EF9C29d5B43ced8a5dB88998a26d",
      "txHash": "0x21bee1b5925a9aa687032642a200af36bfce23e6529c8403d4a32c8fd4586edf",
      "kind": "transparent"
    },
    {
      "address": "0x07cdEcD5B5bF31E33A960E62ED0DD2030fcaa3eA",
      "txHash": "0x3424f8acdc5a5a25ede5d4e420f0918e5216afe8f82ea51631f815c584d68f5b",
      "kind": "transparent"
    },
    {
      "address": "0x77e0265d1761Eae5e8A81339B5a9492bfeaB9331",
      "txHash": "0x440348070e19d27a96d244a6c881aa8fa62b5fe13b108f29cf6d9bb6154a4a88",
      "kind": "transparent"
    },
    {
      "address": "0x3f5835CCD7EA0d882A9b9d752D63CD053bC5276e",
      "txHash": "0xcaec09276f5114b641e7172e0fb84df08b787811fe197d2d47b5d68e849959c2",
      "kind": "transparent"
    },
    {
      "address": "0xA57D6E57306F0789713e5ce7a4EC5131c8D66D29",
      "txHash": "0xd59dbf64ab973757a19aef12cf73b5dd13484eb4e8a4e936c7aed253a04bc4a5",
      "kind": "transparent"
    },
    {
      "address": "0xA84c43066D4eb831277879d234132408d849Fa0f",
      "txHash": "0x11650740f299740d7b31d3ce98cb56f04b24e1ece36b94901fbbe8bf18ac6b85",
      "kind": "transparent"
    },
    {
      "address": "0xc1CE69A1B00B98Be6D2AD63429FB579469E40d5a",
      "txHash": "0x3e08cae0c6429278cf9f8e9aa699ee8437b26b9ff276309efba7fcd50dd3a2b0",
      "kind": "transparent"
    },
    {
      "address": "0x9039084B921648C17F138348b1ef57E8B7B45ea6",
      "txHash": "0x8ab7307e522a910fcdfd9ecbd2071552512a7e0fce000baa179f5c08ece6d346",
      "kind": "transparent"
    },
    {
      "address": "0x158d25Cc4A014a1dfcd4466989306b3f78AEdf43",
      "txHash": "0xc69257e673c06845faac7c700981b42fbeca225c57fdf4a3c52272ef9f2ccb91",
      "kind": "transparent"
    },
    {
      "address": "0x1DbDc0445D186DC453B811F62A2A7B13f29297E3",
      "txHash": "0xa7c30775025f46b3e5d95eb03150a3bf5f0e73138cba763ad81104e03315373e",
      "kind": "transparent"
    },
    {
      "address": "0xf3932e805bD1FFdA7DAb8f1c5c8CFe886B76f2Fa",
      "txHash": "0x9928fdfbc4511dd5c31b4a1a12971b2105460268511fc8283a306add5af5bca4",
      "kind": "transparent"
    },
    {
      "address": "0xe5bC36334865acAE3F2ac516431B667e99b624A2",
      "txHash": "0xef904d07e4b48c6dc303ff85745632900134ac8898445a95f10195865063e128",
      "kind": "transparent"
    },
    {
      "address": "0x2bdC47Ef6ac37fc24a61fd9be83ec8059Aa592Ad",
      "txHash": "0x3ec8161e9386e34d9651d4e45f7a994cecf99352456c7a4da5cbc1e2ddae4e7b",
      "kind": "transparent"
    },
    {
      "address": "0x71e416629beFfb7A4126164a7Dc13702b9ad7d8D",
      "txHash": "0x76484b1c5081c1a95bb9ec72e18b5ec522b269e5f30895fae30ba71a0c10f29a",
      "kind": "transparent"
    },
    {
      "address": "0x7386aE72ED64D398F1E6438e6Fe15bc93b56949c",
      "txHash": "0xc23453ec1ad6240da9fe2289180d487ecb176961ce2b69b0e9b280050d869932",
      "kind": "transparent"
    },
    {
      "address": "0xc2dcd1F4CCcc467BBbd892851d901272E4aAfA7F",
      "txHash": "0x3f41e2e6595feac6049c8b8322783adc3ddd9de56d36dafa01f54e3c90e1d80e",
      "kind": "transparent"
    },
    {
      "address": "0xBE74C2aa386b0DAf7FD41b15f3f911A471D93A02",
      "txHash": "0xeba20ab6b83c99abebb3ac8973219414769488922c858fc8daf14532f73d230d",
      "kind": "transparent"
    },
    {
      "address": "0xB7Ad77E5cB5B21f872ECC3D1265157e424aF7657",
      "txHash": "0x3610e27705f39ac5f0cddcf4c44f1784da4fe21282f77fc3d419170069346771",
      "kind": "transparent"
    },
    {
      "address": "0xc69F5F6F1033b03E361478689f132ad54fA800Ec",
      "txHash": "0x69af957ce7a3f5475f0e86e738770a36605f303c49df00e7e24946ae1352d103",
      "kind": "transparent"
    },
    {
      "address": "0x58FF4dFd60F293d9fBf9B8fAd5c70919BE2A51ff",
      "txHash": "0xe5a432002bb47db5de3555c87e3572d57374aff628016244f426c5496adb8b08",
      "kind": "transparent"
    },
    {
      "address": "0xB87a99687B2d7130D02C785F4111aCe2a4cAF016",
      "txHash": "0xa06d1ad60667ccf74c6a6e7ec1bf9b2775a4258ce7a8bf5b6265ad510eb00a90",
      "kind": "transparent"
    },
    {
      "address": "0xFc8617198F3959870825d0206cC1Ab529705E006",
      "txHash": "0xe437b681ffa7ff0f35afee7f2df83b0acec15a925d636f613b1a98a5a2f4d7b7",
      "kind": "transparent"
    },
    {
      "address": "0x72137F7667F5A549b9D0647426b4d7F316942422",
      "txHash": "0x1ed793fb9798a7d507365e84ba1657988ff92a7f80748cb759f749723c097a9c",
      "kind": "transparent"
    },
    {
      "address": "0xC3f1af521AE43e3368eA96E83012fB3E3c4A3F55",
      "txHash": "0xa6e7b1fc4431ca8c03c6dfc770e06091d3e8917e6dc36eab8ff75efb4b28e75c",
      "kind": "transparent"
    },
    {
      "address": "0x2ebA9594F09cc1c8Ae6a7479CACBf19c7B6776bb",
      "txHash": "0x15028f63849ae77f2303f811cd3bd3eb58f38a6ec040456bca3cf6482fb436b8",
      "kind": "transparent"
    },
    {
      "address": "0x0827eaC4E88d7ad06c32a7656dF7c5d42601A76b",
      "txHash": "0x84bb3e37547aa6d504bcb27ee2a6af19f2bba6627be3c29ab26d24d9918fbea9",
      "kind": "transparent"
    },
    {
      "address": "0x9A11bB3dE9304b9e30575896F4465b0034F3f1A4",
      "txHash": "0xddbec6239503d2eda8790e4c3922a139e9a2d6f18bdc25cafbaa20c439f79ecf",
      "kind": "transparent"
    },
    {
      "address": "0x32a94854d8d2b9C8B99d255f9d030f91f54B2843",
      "txHash": "0xd562871051827fef00c447bd9407b39925e1d93f4ccbd6529c9b630ff29fad0e",
      "kind": "transparent"
    },
    {
      "address": "0xc66eAcabEd7a89ea5076CfE4598CF9af36732b60",
      "txHash": "0x473245f12ef8806cb3892fca2af831701307e2602bcac982101aa15bddf85ecc",
      "kind": "transparent"
    },
    {
      "address": "0x79cBbaAC67d7F5565a707685B49544Fd8cd29E0D",
      "txHash": "0x9d9256ad72adc24ffeeaa7738b593b45f63b61a3f84942f34d3926ac03b193de",
      "kind": "transparent"
    },
    {
      "address": "0x97df9ba254b7a382a96304246dAd4cD905C08d68",
      "txHash": "0x7d62f8f3539d4b4b422734231e543d52b183b487097780e29afcdedca922477c",
      "kind": "transparent"
    },
    {
      "address": "0x21422A9a1FE935A49De58cC65660a2f534BD553E",
      "txHash": "0x31f9df32944e536f80163e3e5899fa046b15f48004d43adfc6787e510ceae550",
      "kind": "transparent"
    },
    {
      "address": "0x04Abad2342f50A90735459c8B7AC8d7dd1a470fa",
      "txHash": "0x950438fb04d824a7fb4b2d9b372925a4035cafc1b50da232b37120f539df7e0d",
      "kind": "transparent"
    },
    {
      "address": "0x4E52EbdE4b99bE0111aeCEE4C9849b2b2Acb56e7",
      "txHash": "0x45724bbd64308b545a9606d94c29773df9ff97b6ce30011d452f4d01e2438ce3",
      "kind": "transparent"
    },
    {
      "address": "0xAA992FD5FC31740151637b8D3ee553B9830f072e",
      "txHash": "0x79e9f491d7f5e35f6b97ad75df92f76aaf5c73af9cdcd4ed460983a86728e949",
      "kind": "transparent"
    },
    {
      "address": "0xD76F814EF26193B76F194E19A211B377827A4Ffe",
      "txHash": "0xbb97c22dbb52c224d0174c9a74a5432beaea75589929d5e964c579bacc72b1f9",
      "kind": "transparent"
    },
    {
      "address": "0x45AcA8F39C8c7927EaC5dC58Ff0e6F7E43722935",
      "txHash": "0xcde9b4b3383820f70c3e587b1a1ba47f4131082fa1863aa44dc9aefa4cae07e5",
      "kind": "transparent"
    },
    {
      "address": "0x7EB2dc80B5eC52eb06A9929C54C94a691C34B216",
      "txHash": "0x2eb0603214fa4f6e0f8b5c12b7b0439f42dd3f85e511ff6093566ef0bf24f3d6",
      "kind": "transparent"
    },
    {
      "address": "0x3782Bb506A6b3BC39db55F349395609d21a7464c",
      "txHash": "0x8fb33bb93375da054ac3d2320a03d941d7607a9131e30cd214c1237b0ab83415",
      "kind": "transparent"
    },
    {
      "address": "0x5052F34eca18266eC4E61c5B70e7CE80e379c8AC",
      "txHash": "0x48d7cdd0dd9a6f28b14be7030b830f405a1e9709691dc8387cb16649f14e5faf",
      "kind": "transparent"
    },
    {
      "address": "0xC5134FbBAcBE41f62505fd28eBF31b09f63d1AD3",
      "txHash": "0x470d635bcbf0b07bbcdec58d6a96ec0a2c9a7845bedd53ea71a2ed2d5a394a9d",
      "kind": "transparent"
    },
    {
      "address": "0x7453365d8E4406a82dA18228b8fdb920cDdCd2Ca",
      "txHash": "0x255c13d63060ebc8c078d1485e11e61132b816a099139f9d9aee003be16a7970",
      "kind": "transparent"
    },
    {
      "address": "0xe451D807d6a4372b30Af31142282d198DE25C149",
      "txHash": "0x9dfec99dfab660f729b66289cb1731709ce3ed72dbb70c8cfe76ed9514b777c7",
      "kind": "transparent"
    },
    {
      "address": "0x2CAD9194df74c574ae10f0c5b421CA66A0D272E0",
      "txHash": "0x1d4b1810ff1d663ceb4976ff3c7ed4427922b7ba02eeb1a5cea57928a037fb2f",
      "kind": "transparent"
    },
    {
      "address": "0x0FFF122d3c6524510B6807Ecf3c49c0D64f02Cf8",
      "txHash": "0x58cbd2e14cc522d573da8f6dab7882df3ce814ce35570f0604a97562181256dc",
      "kind": "transparent"
    },
    {
      "address": "0x3bc3e7A2428E45b664ECDF1903278569F6659a95",
      "txHash": "0x3ed3a5d06f3bfb6beb1eda2003b063f7002ef1adc71bb7a2e6a76488fb5969d2",
      "kind": "transparent"
    },
    {
      "address": "0x895E0E1b38a5C7b8a2427E9F12d0cf421694D718",
      "txHash": "0x6ff471ebb790457dac7432212e29b743eec7954915f2d26496cd5726d1b66795",
      "kind": "transparent"
    },
    {
      "address": "0x50AD12a06eae5A4Ab51276B6007A38333e91e121",
      "txHash": "0xb3c59fc94e10914d0121354cef8b1614f6bfe847a09196b532d3e75b1e3a5169",
      "kind": "transparent"
    },
    {
      "address": "0x9750C63daFbfDE108d5aEB3BE3a69D46E96c9D5D",
      "txHash": "0x570e372e83a8271a7755a1e474ec37e78235ecb6b55f5901ff05d50b63eb803b",
      "kind": "transparent"
    },
    {
      "address": "0x35dbE700a939Be1cca1d121c09105697e3C235b2",
      "txHash": "0xd675ce6311bd90dfa5d3e81539657bc9743eccc2a52032adb6acd017e483a905",
      "kind": "transparent"
    },
    {
      "address": "0x378db2b5953CAb86632178De86360f9805fD95be",
      "txHash": "0xfde273d358f65b9e60bcf753be71eadb0f19c51b9a795ac0edd850e1f824ba03",
      "kind": "transparent"
    },
    {
      "address": "0xaC6c965D42952c41C0AB19E6210C908D13aB4082",
      "txHash": "0xe6c6bf801f210c5e557cf3e1eb617b247f778155045b6b7526b158bea57a7d8c",
      "kind": "transparent"
    },
    {
      "address": "0xA4BE340dCD1DAEbF599f348635A38341D4f7f631",
      "txHash": "0x2cd4efd01525a775f226c9c42220f0a18d8c6f835ce67797ad2dfc93f1b023b6",
      "kind": "transparent"
    },
    {
      "address": "0xDD52aD477F7255EEa9421A9b84B301fBB45Fe9d4",
      "txHash": "0x5f97aaa72cf8c93bf19143a20721da37a43f88fe6b62bcfc2026486e9e13be33",
      "kind": "transparent"
    },
    {
      "address": "0x134440E780899fCC75712562868F22d977F5E3Ab",
      "txHash": "0x770f9ad0e19b49628a40e1838377aa43be7568b7a5c9242ca18fb18a7579c1a4",
      "kind": "transparent"
    },
    {
      "address": "0x9CA447669a171B4519A9524ed664d51149e00084",
      "txHash": "0xafac25624bfea7e85a8fd1dc317087e730aaf7a247080fe4713aa00bfb80b14d",
      "kind": "transparent"
    },
    {
      "address": "0x21450F1A2b9939775CE60C71a6663Cf76196fF2e",
      "txHash": "0x8892d325eaa4201b6dc15dcc54384ca1c4e263de77f18b0bffd2fd725ed59c7f",
      "kind": "transparent"
    },
    {
      "address": "0x65f7DD9a38E7105538a8fD3c6653e7f099B657E6",
      "txHash": "0x2ce187ecb26df11e62dba38cee323412138cedf534ea27b24fa3a99fd3330731",
      "kind": "transparent"
    },
    {
      "address": "0x2DB9ee2E4137c20a2aE5313B1dcDccc54979aa75",
      "txHash": "0xf0c7500cf3db1159917a9df339c2c1624b04dc439fffe01122e9e7b0a9ecf8ba",
      "kind": "transparent"
    },
    {
      "address": "0x0c3AF631dFDe30853e855F515A6c2E32f2ef2f43",
      "txHash": "0x9901cd86d501778d5697eaa89386d839f6191ab6314718759315b896971420b8",
      "kind": "transparent"
    },
    {
      "address": "0x2813EFFedC87AFF2AF116A5d311Acf477e0639C2",
      "txHash": "0x8188c1fbb63db589a46b6d58c683f4673811d284b7a62a71bd5fd6bef43adff6",
      "kind": "transparent"
    },
    {
      "address": "0x44549BadaA1d220544A53D732b7222DFB4088bD0",
      "txHash": "0x2600b303ce8d91c156976b88ccd658b5a5808f14195651e1ba8d527391071e38",
      "kind": "transparent"
    },
    {
      "address": "0xB25723Fa5d3645da09742B9b78E26ef2549d35F3",
      "txHash": "0xa2db11c54fef148413bbb52ed2adbd9d0b01363eb08ec2cadc0b79025f9891bd",
      "kind": "transparent"
    },
    {
      "address": "0x3798a4e1C79d45eF3ACE1BF48C480CC1bB296845",
      "txHash": "0x6b1149ac5e327add485368ec36bed8e8a49c9f85e7c56fb73a5a354d2c71205c",
      "kind": "transparent"
    },
    {
      "address": "0xce3074F623402627BBB7BCb7A8b73B191d008207",
      "txHash": "0x23e6ee10efc3a19a32d7c39cb33598a69a352bbf872fb3f7c8410e70839b49cf",
      "kind": "transparent"
    },
    {
      "address": "0xEc5FAbdec0bec7dA0dA28181a110DB6109E51482",
      "txHash": "0xe9653f4db5cab3de6b4a18a5d82b4d995281be4983e87083248fc865f7da606a",
      "kind": "transparent"
    },
    {
      "address": "0xC43025f4Fc8c6cBF44A8AF0824290FAbCB9aE8fA",
      "txHash": "0x7a66c104c3a131111a9c8f02c9a7527cb333fd7213bf5eb12c67e584e17af43b",
      "kind": "transparent"
    },
    {
      "address": "0x0F5D871b6bE14B728037b15cA4000cce01D0540D",
      "txHash": "0xcfc87ad9bea2e989301eb4f72cf1eb4cdb649882a7385155d111fc30c8897649",
      "kind": "transparent"
    },
    {
      "address": "0x0ADEf3c88C3cf7E3aE58BEFE9CCDA0230EA3BaFf",
      "txHash": "0xb587e0839a9519cbf8677011695373ef266625910042db745917622bde8755ef",
      "kind": "transparent"
    },
    {
      "address": "0xA92FC233eF383c062522b7323337EAE75C82a85C",
      "txHash": "0x68c98b4409a6a31d0494e2c9042238eabd5b3ff5c8b8e5950fde4b30e3e61a54",
      "kind": "transparent"
    },
    {
      "address": "0x2fEb3163dC9099E0Bb49262F8A9B22150722723F",
      "txHash": "0x6be613c1376599eaa204da892dcef111738563f732fd363efcea963f460fa25f",
      "kind": "transparent"
    },
    {
      "address": "0x8d39368083093B4e8604F46C271FA662fc285Cf4",
      "txHash": "0x58b00cbd9110ccdbc93cd630d1f1bfc790ccbb82d6276bd17680e30c08f8675b",
      "kind": "transparent"
    },
    {
      "address": "0xB4FBc15d44a2481000e7a562a3863588cACE5897",
      "txHash": "0x1edf9719fc1b05e8c14a0419d8b7711c4523abacf2f148b6074e06d3165684dc",
      "kind": "transparent"
    },
    {
      "address": "0x6d01a0F8d4373E3df0c1e222f9Fccc8166544368",
      "txHash": "0xb64dab5537b73ccb6afe826fe87d58fd576d19c14fdc86bffd0742dc9144b58d",
      "kind": "transparent"
    },
    {
      "address": "0x72A80A006d48Bd54C21630dA88B78E129f72C3bF",
      "txHash": "0x1efab7b7b8b07fb1ce8d3f4179b78d140dc48cc1887cd791cfb774633a88e8e6",
      "kind": "transparent"
    },
    {
      "address": "0x56E92c14AE750Dc3E637CCF99A70ccAb7Bdc5123",
      "txHash": "0x32848bf08ee224c571815c5ca208be6e4547f6b2656769e473b82a42c44c3c2d",
      "kind": "transparent"
    },
    {
      "address": "0x66D25876937C2ed56CE91AE4Cc126f9a754b2504",
      "txHash": "0xa47d58e4386c8883c1cdbcac1998681834f49e7cbf96ce8f3a892ed952d7ee79",
      "kind": "transparent"
    },
    {
      "address": "0x9DF5B4feAB178d643FDaC20f789aFEc6DC82C765",
      "txHash": "0xac0e1b16d8b50629357bc9c4295ff7c5e177efae9f8b1889a3f642f34a21c8d8",
      "kind": "transparent"
    },
    {
      "address": "0xBa25217AcA7E2F19C0dE43075601620B733b1a79",
      "txHash": "0x80e0e028d11ea28eb03fdf51ba97d5cfd703afec5d4c2ac632e2bb28bdbf5b01",
      "kind": "transparent"
    },
    {
      "address": "0x623071869FDBCbf3B21375a904Bb11e79E7F700c",
      "txHash": "0x86a5d2e2cf81ae2de001af208868e052781b2b07330e93a2777605f6e0acea91",
      "kind": "transparent"
    },
    {
      "address": "0x3ab90b829E90eb733eBD4489eC1fe0E38304B4a2",
      "txHash": "0x3daeffea354aad7b460573cf42a42a3d17dc480f4f092a7956070aa7959cca55",
      "kind": "transparent"
    },
    {
      "address": "0x3D5F4a7e587a7B227782310beFE92ec1f8ce92B6",
      "txHash": "0xeba40ff2e0593798486dcc6d7dc4b8dd4ba3af96e8b926de2ba3c40e53a4b4d9",
      "kind": "transparent"
    },
    {
      "address": "0x4c8c04F59b03FD61Eb8ec185fbe69dCEFdFa72Bf",
      "txHash": "0xc04b5f74f566383e7d591680ee52cda98f2c29e72c65b41c56c483ec58ee6c2f",
      "kind": "transparent"
    },
    {
      "address": "0x90c1Da88271ACDb45dA78A4E8D0434EF5b6CE823",
      "txHash": "0xf1c972698279207a52dc9ade50db3bf63253e81c50e27c30975cfcd1da3298fc",
      "kind": "transparent"
    },
    {
      "address": "0x56Dc24E55ca8A41e8C7A79879DFDd481BFA5433F",
      "txHash": "0x9cdf378bb3d5c7212636a1b01e87725008ce4f82c8455d9092ca54d035bdb2b1",
      "kind": "transparent"
    },
    {
      "address": "0x16Ee7EfF8bd5be30c67206418a69Fd01c85cE0BD",
      "txHash": "0xdf6ad4adbc27ef52e3ace3a770d90127f2373bbd9c131baabc791642590b09fa",
      "kind": "transparent"
    },
    {
      "address": "0x7Eb29D26C0f0b66d40361400E6285F610625C24C",
      "txHash": "0x09ac75960351975db1034d730f10534855e9428f6a082e9fe709ca55221f9bc4",
      "kind": "transparent"
    },
    {
      "address": "0xF103D78Bd9B60E2FE62B0Cdd7d58Da3f8F105195",
      "txHash": "0xb2ef681b74e56231cec644da5aaa63a3f6a8705a5bbf987d887a7d9a1b463b81",
      "kind": "transparent"
    },
    {
      "address": "0x7Dab63427846638C94e30E1ADCBD121DE521abC5",
      "txHash": "0x58ec10d8f2379a8658a143ab43d0b08c7480b21e48442928b648732b65bc392c",
      "kind": "transparent"
    },
    {
      "address": "0x92357528Dc6c0342E1874f50f487A4cCd1209935",
      "txHash": "0x49cb6ec8daaf8a30f8026a29edfef9b9f55d575cffbd48ac31cbc025c854c0e3",
      "kind": "transparent"
    },
    {
      "address": "0x80cF3A93eEf756Cd137B0856AAAbdD380953ee4b",
      "txHash": "0x1cb512d293041f5fecdbe91e911d94ff324c5de0ce4230972862f27ed125ba67",
      "kind": "transparent"
    },
    {
      "address": "0x2f0eAc50d94d0578186b19d39CA05f10cB0C55B5",
      "txHash": "0xeb97124ed126690975a4e25c9d03f2fcca0b80b224efa220c58c7f3f155fa9fe",
      "kind": "transparent"
    },
    {
      "address": "0x48cc69d0837109E65Fde33D793c316dD42C96A43",
      "txHash": "0x0a2e718dca32ba543139849790b3ffb16dd4d235c5b8569701cf24d367e750d4",
      "kind": "transparent"
    },
    {
      "address": "0x69EB407922704997D5902433AF101dCbd8701175",
      "txHash": "0x48d21290846823c603668408db8e32395e64a007fec490d07e86bf885c00b5d7",
      "kind": "transparent"
    },
    {
      "address": "0x567600a43cf32088345DED1D4E3779dC62ecd591",
      "txHash": "0x68fb774b964858e1c66c653986dd2c0cc445388b5bcac9f340ccdb612f5b769d",
      "kind": "transparent"
    },
    {
      "address": "0xd9C01eE7E9a9221f9C45Bc839db4A3044c494833",
      "txHash": "0xb6a30154c0976e0bb4d2bcd467e9bc9d17581fc260f913d78adba2da303e8885",
      "kind": "transparent"
    },
    {
      "address": "0x6494DE43c7c794C232770489E13e4364d7266d15",
      "txHash": "0xf48fc017284771c677f80d93bc94e938b6f918330dd0c8105db9380e178c07d8",
      "kind": "transparent"
    },
    {
      "address": "0x90766E49691C37176bdc8D7546Bba4EA59D17Df2",
      "txHash": "0xbf3d020ed9108c865ebf66a36575ff3a89480e4b895a8bbd05985729d83219a3",
      "kind": "transparent"
    },
    {
      "address": "0xcbD2d3Bff63bd6D97Eb634680Ca8b0F91b608C25",
      "txHash": "0x4eeee4f47ddd0a4fbf4a68715138aa8ef9b2fe5ceade5432c50e89c07516b379",
      "kind": "transparent"
    },
    {
      "address": "0x592cd699e1dAA86Bed0f20c439f381E369616B71",
      "txHash": "0xb1100d9b1f9d5f5f57787f7ebfaee14af19b25be148ff828c47cb9fb8b80040b",
      "kind": "transparent"
    },
    {
      "address": "0x6d7C5AD38e697de257c06f78d17249C208bD9E48",
      "txHash": "0x507857ac2429827c2fc86781e2d0c8ca2f581da748bb633f0020608f2c16ad51",
      "kind": "transparent"
    },
    {
      "address": "0x0Dc1D3ec3719907849616D5172F79d326e85fE7c",
      "txHash": "0x7889820b3ba23bdaf36ec4c5a48345a14d3e4946f70b6eb61b1a137800cb347c",
      "kind": "transparent"
    },
    {
      "address": "0xD7AB934E99f18d009BA6c340b601CDb44401D4a9",
      "txHash": "0x9bd8fe9f51039a6e25d055619d19e9401011bd24853d3fcdda6782219fe46c6a",
      "kind": "transparent"
    },
    {
      "address": "0x555e5b80B2A3D959D5993e8f34D693b9B445e0C8",
      "txHash": "0xbc0e04857af3024ffc45aa96ff2b061c97d9772b07acc2059c9eaaae1f7ec931",
      "kind": "transparent"
    },
    {
      "address": "0x31c5f006f856F5156e29c42f14f3d318852bE6ae",
      "txHash": "0xd084991fa0404a87dbaaf587219922ebaceeea0529134999b7bea07487a753bc",
      "kind": "transparent"
    },
    {
      "address": "0x008C4954F597f0B7949c86fE14FFEb323B294782",
      "txHash": "0x9ffcdd28c0c0b7755d082f3d4bbf9f01e17156f68373bd16e771d979c8ebe1bc",
      "kind": "transparent"
    },
    {
      "address": "0xdDD8168E22335146BE15455e3a55F5C990f7957C",
      "txHash": "0x37143fe04ded2999c0a4fb4fdefe866ea65414f94c2b6437380ed738042c69f1",
      "kind": "transparent"
    },
    {
      "address": "0x156570048dE783393D2278b276F0e179c3C0Af4B",
      "txHash": "0xcbf95440afb374f6ce2e6d385acb67396441b63a24f51c848832f7253b19827d",
      "kind": "transparent"
    },
    {
      "address": "0x541Fdd65eA5A2Fd8c0940A2d701497f3B2423cAC",
      "txHash": "0x97933b5a9224a220bc438d4f58a388e687934e98f2ed2abb01e5622ade3ad5b2",
      "kind": "transparent"
    },
    {
      "address": "0xB405770fc3c58681844068383532dF7253c7e110",
      "txHash": "0xf8e6162a64a31ecf61c711771bc446ad0a8bd5cf971e6138138502fc700bdd34",
      "kind": "transparent"
    },
    {
      "address": "0x65276D25ec9212956b4dADbc512d1BcDDC449334",
      "txHash": "0xd964171448d3ba080172b486aa535562f3a68cc3ea5145825249aee53f8d014f",
      "kind": "transparent"
    },
    {
      "address": "0xd88F433d378aA76b53Cbed29a1FEE70683F3D8Df",
      "txHash": "0xb330ae4ddb7f9ee8b2b0ab4f9c3917a7f51e52b26b127d5915128afb727665b7",
      "kind": "transparent"
    },
    {
      "address": "0x4cD2cA3B0d59Fdf04EEf68B37fda322855D2Db56",
      "txHash": "0xfee4949f66cfef169c7157554af349b691422537f1e3502b34bc830612038c96",
      "kind": "transparent"
    },
    {
      "address": "0x9D5E03BD1b6540F86b67E20fDd484Ec7040aDdcC",
      "txHash": "0xaebc289a41a54b2246f4281111e31f449cf9b11b53aaf8df9d664551b10895a0",
      "kind": "transparent"
    },
    {
      "address": "0x45C008B545E52F7085788E1F7d0Aec403F4096b1",
      "txHash": "0xff94ab972e22895c8e94d547f0aa2b4e4b7695966c7cb3f150750b975eda3ec2",
      "kind": "transparent"
    },
    {
      "address": "0xB8bad04F46501A85cd4285Fa71Bd789a11AD3502",
      "txHash": "0x0f3484ffc176a276c2edfe2018b2512917422b1641d9628b0a5535ad92a6bcb4",
      "kind": "transparent"
    },
    {
      "address": "0xe38CF4D8521f712A69C13fdC3040E1eb654ad9E2",
      "txHash": "0x7f72d0dc4e40e7bd0167b6ed3028daa65bb389088d576a56bd5d9c22ab951cc7",
      "kind": "transparent"
    },
    {
      "address": "0xAcd2C60DC62962F12cb62793b6ba6c8945430780",
      "txHash": "0x83a437d23f91c97b3fb27ffb40ae0ecdf857048cf86406ac9df5cb7d105fe739",
      "kind": "transparent"
    },
    {
      "address": "0xf156D01D7CD065dA4d6e3e8e29053942968A3EFa",
      "txHash": "0xd0277a55fc5735b29a2994f3ae6e91c395454a93b8f289cdd952e60fb2258064",
      "kind": "transparent"
    },
    {
      "address": "0x01c50e147E65D8987111B3112514a4fF35722B59",
      "txHash": "0x53b0a665564d0fe625564535e142fac016732498eda586acb7cb3a1ce4752c63",
      "kind": "transparent"
    },
    {
      "address": "0x22970260D7Ff1BE7BB7B5C59497a8f086E437dBF",
      "txHash": "0x4ad3bc3cd2145ec8dcfe7dbc72645d7a4ec06d1d622af5b8d62d6912162076be",
      "kind": "transparent"
    },
    {
      "address": "0x4240817A49FcaD6d48513c3C47df0d2a31aFFdD3",
      "txHash": "0x22099490a6fd1eb96fa5676168e00e3b5fe035a904ffe37a97a47ad015484f28",
      "kind": "transparent"
    },
    {
      "address": "0x19D9A11AE2aF8A71B0143aF4CDb700feF6c611Cf",
      "txHash": "0x6a2f2621087d6d48bcf0f84827a65b6cf245bf144f2c14dfdf32672fcb99eb8f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "eebf8998a554d4eb1d8aa15d1774bd3bca83154e439f91d7a249ff823c5c20bd": {
      "address": "0xBddFf7e3A0F4c4E1dC3Fd510d6F5d1f5459E8909",
      "txHash": "0x8658d8f6f2ade2f41b0f448fdde4b657b34c05e3e947ad0c1084f6de13f5744c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4095_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "Locked",
            "label": "lockedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Locked.sol:10"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:48"
          },
          {
            "contract": "AuditToken",
            "label": "delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/AuditToken.sol:13"
          },
          {
            "contract": "AuditToken",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5255_storage))",
            "src": "../project:/contracts/AuditToken.sol:22"
          },
          {
            "contract": "AuditToken",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/AuditToken.sol:25"
          },
          {
            "contract": "AuditToken",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/AuditToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5255_storage))": {
            "label": "mapping(address => mapping(uint32 => struct AuditToken.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)5255_storage)": {
            "label": "mapping(uint32 => struct AuditToken.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)5255_storage": {
            "label": "struct AuditToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4095_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4095_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3820_storage"
              }
            ]
          },
          "t_struct(Set)3820_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "6ad569edda0ed443fbb12343b3652c5825a12ce32e2e2c303cb9da1c01c94807": {
      "address": "0x927DF1C77A0343a23DFa2e30399c9676315791B3",
      "txHash": "0xd06ba7cd4103660a2e7661426c266fee55cf5be89c70737b251d33075134d8cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "Locked",
            "label": "lockedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Locked.sol:10"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "AuditToken",
            "label": "delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/AuditToken.sol:13"
          },
          {
            "contract": "AuditToken",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5687_storage))",
            "src": "../project:/contracts/AuditToken.sol:22"
          },
          {
            "contract": "AuditToken",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/AuditToken.sol:25"
          },
          {
            "contract": "AuditToken",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/AuditToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5687_storage))": {
            "label": "mapping(address => mapping(uint32 => struct AuditToken.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)5687_storage)": {
            "label": "mapping(uint32 => struct AuditToken.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)5687_storage": {
            "label": "struct AuditToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "1a59e000669bd82270c2c1ba338b3a84a038139b32dcdfb9010f2d68e65fe0ea": {
      "address": "0xcFc9d5d7868eb8436B44058e0beF1409810B4Ea6",
      "txHash": "0x5bf768f5c0324426e77cbcde1106fb137cb048db6957069f5ab51780dd479b53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "Members",
            "label": "auditToken",
            "type": "t_contract(IAuditToken)15261",
            "src": "../project:/contracts/Auditchain/Members.sol:31"
          },
          {
            "contract": "Members",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8196",
            "src": "../project:/contracts/Auditchain/Members.sol:32"
          },
          {
            "contract": "Members",
            "label": "stakedAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:33"
          },
          {
            "contract": "Members",
            "label": "deposits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Members.sol:34"
          },
          {
            "contract": "Members",
            "label": "dataSubscriberCohorts",
            "type": "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)8961_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/Members.sol:35"
          },
          {
            "contract": "Members",
            "label": "dataSubscriberCohortMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/Auditchain/Members.sol:36"
          },
          {
            "contract": "Members",
            "label": "amountTokensPerValidation",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:37"
          },
          {
            "contract": "Members",
            "label": "accessFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:39"
          },
          {
            "contract": "Members",
            "label": "enterpriseShareSubscriber",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:40"
          },
          {
            "contract": "Members",
            "label": "validatorShareSubscriber",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:41"
          },
          {
            "contract": "Members",
            "label": "platformAddress",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/Members.sol:42"
          },
          {
            "contract": "Members",
            "label": "platformShareValidation",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:43"
          },
          {
            "contract": "Members",
            "label": "enterpriseMatch",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:44"
          },
          {
            "contract": "Members",
            "label": "minDepositDays",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:45"
          },
          {
            "contract": "Members",
            "label": "requiredQuorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:46"
          },
          {
            "contract": "Members",
            "label": "user",
            "type": "t_mapping(t_address,t_mapping(t_enum(UserType)9040,t_string_storage))",
            "src": "../project:/contracts/Auditchain/Members.sol:49"
          },
          {
            "contract": "Members",
            "label": "userMap",
            "type": "t_mapping(t_address,t_mapping(t_enum(UserType)9040,t_bool))",
            "src": "../project:/contracts/Auditchain/Members.sol:50"
          },
          {
            "contract": "Members",
            "label": "enterprises",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/Members.sol:51"
          },
          {
            "contract": "Members",
            "label": "validators",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/Members.sol:52"
          },
          {
            "contract": "Members",
            "label": "dataSubscribers",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/Members.sol:53"
          }
        ],
        "types": {
          "t_contract(IAuditToken)15261": {
            "label": "contract IAuditToken"
          },
          "t_contract(ICohortFactory)8196": {
            "label": "contract ICohortFactory"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)8961_storage)dyn_storage)": {
            "label": "mapping(address => struct Members.DataSubscriberTypes[])"
          },
          "t_array(t_struct(DataSubscriberTypes)8961_storage)dyn_storage": {
            "label": "struct Members.DataSubscriberTypes[]"
          },
          "t_struct(DataSubscriberTypes)8961_storage": {
            "label": "struct Members.DataSubscriberTypes",
            "members": [
              {
                "label": "cohort",
                "type": "t_address"
              },
              {
                "label": "audits",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_enum(UserType)9040,t_string_storage))": {
            "label": "mapping(address => mapping(enum Members.UserType => string))"
          },
          "t_mapping(t_enum(UserType)9040,t_string_storage)": {
            "label": "mapping(enum Members.UserType => string)"
          },
          "t_enum(UserType)9040": {
            "label": "enum Members.UserType",
            "members": [
              "Enterprise",
              "Validator",
              "DataSubscriber"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_enum(UserType)9040,t_bool))": {
            "label": "mapping(address => mapping(enum Members.UserType => bool))"
          },
          "t_mapping(t_enum(UserType)9040,t_bool)": {
            "label": "mapping(enum Members.UserType => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "433716f18898f945226bc2c2516c4ff1eead3f933e26d5de6f4228d830af7c08": {
      "address": "0xBb37EBf95CE19A962DBE33581baC99D0bF698322",
      "txHash": "0x5d7d771168791cecc866229f91d8ca77c02c4bfc2867ed35bdad5d7cc06c1f3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "MemberHelpers",
            "label": "auditToken",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:20"
          },
          {
            "contract": "MemberHelpers",
            "label": "members",
            "type": "t_contract(Members)9451",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:21"
          },
          {
            "contract": "MemberHelpers",
            "label": "validations",
            "type": "t_contract(IValidations)8460",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:22"
          },
          {
            "contract": "MemberHelpers",
            "label": "deposits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:23"
          },
          {
            "contract": "MemberHelpers",
            "label": "minContribution",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:24"
          },
          {
            "contract": "MemberHelpers",
            "label": "maxContribution",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:25"
          },
          {
            "contract": "MemberHelpers",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/MemberHelpers.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Members)9451": {
            "label": "contract Members"
          },
          "t_contract(IValidations)8460": {
            "label": "contract IValidations"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "861ae0b1973eebc8893a78d1e241f8f43f3f6b568255d00609d6bcb9dc394e6f": {
      "address": "0x6a40C91b30F4dAe054e560C7b1A266248d0e8BB3",
      "txHash": "0x83fcd232a8cafdaa97f95afc4bb0d4a5c911bca24f6ee8e13f741d405484d661",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "CohortFactory",
            "label": "minValidatorPerCohort",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:25"
          },
          {
            "contract": "CohortFactory",
            "label": "cohortList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:39"
          },
          {
            "contract": "CohortFactory",
            "label": "cohortMap",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:40"
          },
          {
            "contract": "CohortFactory",
            "label": "validatorCohortList",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_enum(AuditTypes)6448)dyn_storage))",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:41"
          },
          {
            "contract": "CohortFactory",
            "label": "members",
            "type": "t_contract(Members)9451",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:44"
          },
          {
            "contract": "CohortFactory",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8942",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:45"
          },
          {
            "contract": "CohortFactory",
            "label": "invitations",
            "type": "t_mapping(t_address,t_array(t_struct(Invitation)6468_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:46"
          },
          {
            "contract": "CohortFactory",
            "label": "platformAddress",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:47"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_enum(AuditTypes)6448)dyn_storage))": {
            "label": "mapping(address => mapping(address => enum CohortFactory.AuditTypes[]))"
          },
          "t_mapping(t_address,t_array(t_enum(AuditTypes)6448)dyn_storage)": {
            "label": "mapping(address => enum CohortFactory.AuditTypes[])"
          },
          "t_array(t_enum(AuditTypes)6448)dyn_storage": {
            "label": "enum CohortFactory.AuditTypes[]"
          },
          "t_enum(AuditTypes)6448": {
            "label": "enum CohortFactory.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5"
            ]
          },
          "t_contract(Members)9451": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8942": {
            "label": "contract MemberHelpers"
          },
          "t_mapping(t_address,t_array(t_struct(Invitation)6468_storage)dyn_storage)": {
            "label": "mapping(address => struct CohortFactory.Invitation[])"
          },
          "t_array(t_struct(Invitation)6468_storage)dyn_storage": {
            "label": "struct CohortFactory.Invitation[]"
          },
          "t_struct(Invitation)6468_storage": {
            "label": "struct CohortFactory.Invitation",
            "members": [
              {
                "label": "validator",
                "type": "t_address"
              },
              {
                "label": "invitationDate",
                "type": "t_uint256"
              },
              {
                "label": "acceptanceDate",
                "type": "t_uint256"
              },
              {
                "label": "audits",
                "type": "t_enum(AuditTypes)6448"
              },
              {
                "label": "deleted",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1ac1c5ef2729894fa074a942293ca18b4d398455438af7ef22f5fef153c0d43e": {
      "address": "0x05e3c6861f585E1924ACc9eA44700152d65C0CD2",
      "txHash": "0xd8f87d24d5f72117dc0b9e4f1afb24889fd00bd3aeac39cc0f59319f6298a73e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "NodeOperationsHelpers",
            "label": "stakeRatio",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperationsHelpers.sol:12"
          },
          {
            "contract": "NodeOperationsHelpers",
            "label": "stakeRatioDelegating",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperationsHelpers.sol:13"
          },
          {
            "contract": "NodeOperationsHelpers",
            "label": "stakingRatioReferral",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperationsHelpers.sol:14"
          },
          {
            "contract": "NodeOperationsHelpers",
            "label": "POWFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperationsHelpers.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4240e5522bd398e36cc7eb4f81513334da60bc49e8951a9877294896a09e2ba8": {
      "address": "0x1C8e9560D788DFf0C7dBd81c0ECf2849f95a68c3",
      "txHash": "0x299a49e5ffe1559ccd485cecf1a7a30b991453ec05768c98ce5f3f5b04ca0a81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "NodeOperations",
            "label": "memberHelpers",
            "type": "t_contract(IMemberHelpers)8218",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:19"
          },
          {
            "contract": "NodeOperations",
            "label": "auditToken",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:20"
          },
          {
            "contract": "NodeOperations",
            "label": "members",
            "type": "t_contract(IMembers)8235",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:21"
          },
          {
            "contract": "NodeOperations",
            "label": "nodeOperationsHelpers",
            "type": "t_contract(INodeOperationsHelpers)8308",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:22"
          },
          {
            "contract": "NodeOperations",
            "label": "nodeOperators",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:24"
          },
          {
            "contract": "NodeOperations",
            "label": "CPAs",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:25"
          },
          {
            "contract": "NodeOperations",
            "label": "nodeOpStruct",
            "type": "t_mapping(t_address,t_struct(nodeOperator)9506_storage)",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:43"
          }
        ],
        "types": {
          "t_contract(IMemberHelpers)8218": {
            "label": "contract IMemberHelpers"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IMembers)8235": {
            "label": "contract IMembers"
          },
          "t_contract(INodeOperationsHelpers)8308": {
            "label": "contract INodeOperationsHelpers"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(nodeOperator)9506_storage)": {
            "label": "mapping(address => struct NodeOperations.nodeOperator)"
          },
          "t_struct(nodeOperator)9506_storage": {
            "label": "struct NodeOperations.nodeOperator",
            "members": [
              {
                "label": "isNodeOperator",
                "type": "t_bool"
              },
              {
                "label": "delegations",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "isDelegating",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256"
              },
              {
                "label": "delegateAmount",
                "type": "t_uint256"
              },
              {
                "label": "referralAmount",
                "type": "t_uint256"
              },
              {
                "label": "POWAmount",
                "type": "t_uint256"
              },
              {
                "label": "delegatorLink",
                "type": "t_address"
              },
              {
                "label": "noDelegations",
                "type": "t_bool"
              },
              {
                "label": "isCPA",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ba49fa7ede61fbfbe774be4e857bdada21736386658f138af923087349ce38db": {
      "address": "0xD98c5A3E579824A0e2d5fc07236BC732AAb40750",
      "txHash": "0x35c893f0e2022101dd8917e01ec9283394d238092e8492d45dca6f73d8a90ef2",
      "layout": {
        "storage": [
          {
            "contract": "ValidationHelpers",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8942",
            "src": "../project:/contracts/Auditchain/ValidationHelpers.sol:16"
          }
        ],
        "types": {
          "t_contract(MemberHelpers)8942": {
            "label": "contract MemberHelpers"
          }
        }
      }
    },
    "3cb14b7e89c8991b1e957aa8f70195d12303f5ac0c07d1de9f2f5bffcc819f2c": {
      "address": "0x7FDC57c434554B562F23B65aD42E487E4C03F3B9",
      "txHash": "0x6d2f9ce52bf364f798adcf8cda551f8c577494be1fd3fd52e798aaa94c2526a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "DepositModifiers",
            "label": "auditToken",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:26"
          },
          {
            "contract": "DepositModifiers",
            "label": "members",
            "type": "t_contract(Members)9451",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:27"
          },
          {
            "contract": "DepositModifiers",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8942",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:28"
          },
          {
            "contract": "DepositModifiers",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8196",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:29"
          },
          {
            "contract": "DepositModifiers",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8285",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:30"
          },
          {
            "contract": "DepositModifiers",
            "label": "dataSubscriberCohorts",
            "type": "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)7469_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:32"
          },
          {
            "contract": "DepositModifiers",
            "label": "dataSubscriberCohortMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Members)9451": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8942": {
            "label": "contract MemberHelpers"
          },
          "t_contract(ICohortFactory)8196": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8285": {
            "label": "contract INodeOperations"
          },
          "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)7469_storage)dyn_storage)": {
            "label": "mapping(address => struct DepositModifiers.DataSubscriberTypes[])"
          },
          "t_array(t_struct(DataSubscriberTypes)7469_storage)dyn_storage": {
            "label": "struct DepositModifiers.DataSubscriberTypes[]"
          },
          "t_struct(DataSubscriberTypes)7469_storage": {
            "label": "struct DepositModifiers.DataSubscriberTypes",
            "members": [
              {
                "label": "cohort",
                "type": "t_address"
              },
              {
                "label": "audits",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ffea4699e3def67873383308042838484269f641966f7c5dbfd03eb7ce800e3": {
      "address": "0x6F0Ef2334c98177e3A2B52c26B18A5f3e450Dc14",
      "txHash": "0xba9fff9de22b6a585622d3340638cd321edc76797af4b00b93efe2f5e3d07d46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(Members)9451",
            "src": "../project:/contracts/Auditchain/Validations.sol:20"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8942",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8150",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8196",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8285",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8360",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)11547",
            "src": "../project:/contracts/Auditchain/Validations.sol:31"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:57"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:59"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:60"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)11603_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          }
        ],
        "types": {
          "t_contract(Members)9451": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8942": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8150": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8196": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8285": {
            "label": "contract INodeOperations"
          },
          "t_contract(IValidatinosHelpers)8360": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)11547": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(Validation)11603_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)11603_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)11547"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)11554)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "stakeValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)11554)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)11554": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2932f20d08db42812be6e5bd0b926b2e6a24540e68454dea57c5a4cd75869d63": {
      "address": "0x6bf2F2838a70BE5039EC0D40Fe4B1A6bA2ffdE26",
      "txHash": "0xbded80570b784dc31aa7ba5dc2cddad8e2d89dc2ceba6fdeb5fa49c506eea0d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(Members)9451",
            "src": "../project:/contracts/Auditchain/Validations.sol:20"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8942",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8150",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8196",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8285",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8360",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)11547",
            "src": "../project:/contracts/Auditchain/Validations.sol:31"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:57"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:59"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:60"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)11603_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          }
        ],
        "types": {
          "t_contract(Members)9451": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8942": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8150": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8196": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8285": {
            "label": "contract INodeOperations"
          },
          "t_contract(IValidatinosHelpers)8360": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)11547": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(Validation)11603_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)11603_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)11547"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)11554)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "stakeValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)11554)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)11554": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "001826916fdcbc41acbda5ff52584d2300d2a9934a299330248d8cb095a2dd89": {
      "address": "0x267265324Fccf78D7F47AeAF4fdf7cDb8B064cc9",
      "txHash": "0x052db77965f8f52186acb83610485038c15809465338f1df5265ea74303ff39b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "RulesERC721Token",
            "label": "cohort",
            "type": "t_contract(ValidationsCohort)13031",
            "src": "../project:/contracts/NFT/RulesERC721Token.sol:18"
          },
          {
            "contract": "RulesERC721Token",
            "label": "NFTCompleted",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/NFT/RulesERC721Token.sol:20"
          }
        ],
        "types": {
          "t_contract(ValidationsCohort)13031": {
            "label": "contract ValidationsCohort"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6cc8c01e8384be25cca920e6fa9c75970421f3c5353ffc5e95f1453a6f4803a0": {
      "address": "0x2cC62ad08EfB7fDa00a8832bbbf55e0f7b6AF435",
      "txHash": "0x3cf8f2adba61dbbd469a79ca121f6e9212cf1d3135485039d99694024ccba396",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "DepositModifiers",
            "label": "auditToken",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:28"
          },
          {
            "contract": "DepositModifiers",
            "label": "members",
            "type": "t_contract(Members)9458",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:29"
          },
          {
            "contract": "DepositModifiers",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8949",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:30"
          },
          {
            "contract": "DepositModifiers",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8208",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:31"
          },
          {
            "contract": "DepositModifiers",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8292",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:32"
          },
          {
            "contract": "DepositModifiers",
            "label": "nodeOperationsHelpers",
            "type": "t_contract(INodeOperationsHelpers)8315",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:33"
          },
          {
            "contract": "DepositModifiers",
            "label": "dataSubscriberCohorts",
            "type": "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)7473_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:35"
          },
          {
            "contract": "DepositModifiers",
            "label": "dataSubscriberCohortMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Members)9458": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8949": {
            "label": "contract MemberHelpers"
          },
          "t_contract(ICohortFactory)8208": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8292": {
            "label": "contract INodeOperations"
          },
          "t_contract(INodeOperationsHelpers)8315": {
            "label": "contract INodeOperationsHelpers"
          },
          "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)7473_storage)dyn_storage)": {
            "label": "mapping(address => struct DepositModifiers.DataSubscriberTypes[])"
          },
          "t_array(t_struct(DataSubscriberTypes)7473_storage)dyn_storage": {
            "label": "struct DepositModifiers.DataSubscriberTypes[]"
          },
          "t_struct(DataSubscriberTypes)7473_storage": {
            "label": "struct DepositModifiers.DataSubscriberTypes",
            "members": [
              {
                "label": "cohort",
                "type": "t_address"
              },
              {
                "label": "audits",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5879ee3d2fa94d104d7851b305dfe5a5a05883d3d23b90941dab46ae968bc408": {
      "address": "0xaa879a3eE2D5511811F6Ca40e5f081Da83135c4D",
      "txHash": "0xfc1be71b6f9771a7bc8d7e10dabcf585efba7663352c02f8d122521d2c8a1c29",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(Members)9458",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8949",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8162",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8208",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8292",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "nodeOperationsHelpers",
            "type": "t_contract(INodeOperationsHelpers)8315",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8367",
            "src": "../project:/contracts/Auditchain/Validations.sol:28"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:30"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)11558",
            "src": "../project:/contracts/Auditchain/Validations.sol:35"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:63"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:65"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)11614_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:68"
          }
        ],
        "types": {
          "t_contract(Members)9458": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8949": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8162": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8208": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8292": {
            "label": "contract INodeOperations"
          },
          "t_contract(INodeOperationsHelpers)8315": {
            "label": "contract INodeOperationsHelpers"
          },
          "t_contract(IValidatinosHelpers)8367": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)11558": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(Validation)11614_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)11614_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)11558"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)11565)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "stakeValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)11565)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)11565": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "dd55c90d422c96e43053838c3f4005dcef4894692339d456ba4f3eff741fe347": {
      "address": "0x1339685b7685E2730fD49A8CE7deb030aEF61332",
      "txHash": "0x65ab5ed09e35526b1dfdf5a70ec7850e4507cbb6ad685429041b9aed3c4c518b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(Members)9458",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)8949",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8162",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8208",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8292",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "nodeOperationsHelpers",
            "type": "t_contract(INodeOperationsHelpers)8315",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8367",
            "src": "../project:/contracts/Auditchain/Validations.sol:28"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:30"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)11558",
            "src": "../project:/contracts/Auditchain/Validations.sol:35"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:63"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:65"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)11614_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:68"
          }
        ],
        "types": {
          "t_contract(Members)9458": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)8949": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8162": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8208": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8292": {
            "label": "contract INodeOperations"
          },
          "t_contract(INodeOperationsHelpers)8315": {
            "label": "contract INodeOperationsHelpers"
          },
          "t_contract(IValidatinosHelpers)8367": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)11558": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(Validation)11614_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)11614_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)11558"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)11565)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "stakeValue",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)11565)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)11565": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "430cdfdc442b4c6b7471c27eef212db42610ee44595faf6d8bb51530786b07fc": {
      "address": "0x2eCA700C9F804b8258d7667Ac6C3A309a1606DeA",
      "txHash": "0xe8c47dc1d73caa8187355539b1b710fdb5a412371f52372b021053d80a80a771",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "Locked",
            "label": "lockedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Locked.sol:10"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "AuditToken",
            "label": "delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/AuditToken.sol:13"
          },
          {
            "contract": "AuditToken",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5729_storage))",
            "src": "../project:/contracts/AuditToken.sol:22"
          },
          {
            "contract": "AuditToken",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/AuditToken.sol:25"
          },
          {
            "contract": "AuditToken",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/AuditToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)5729_storage))": {
            "label": "mapping(address => mapping(uint32 => struct AuditToken.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)5729_storage)": {
            "label": "mapping(uint32 => struct AuditToken.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)5729_storage": {
            "label": "struct AuditToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "6793dff0a71361a8261734ad98c136a12faf1987bd895b19bc7357c1eee80649": {
      "address": "0x3A4582268EB4403cCde7F5AF77ED944D058c6fbE",
      "txHash": "0x154ff2a41e29d8c4a1be1f1e6b902a503885343702e962e4a0dd172b351c9d75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "Queue",
            "label": "head",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Queue.sol:29"
          },
          {
            "contract": "Queue",
            "label": "idCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Queue.sol:30"
          },
          {
            "contract": "Queue",
            "label": "queueCount",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Queue.sol:31"
          },
          {
            "contract": "Queue",
            "label": "objects",
            "type": "t_mapping(t_uint256,t_struct(Object)10996_storage)",
            "src": "../project:/contracts/Auditchain/Queue.sol:32"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Object)10996_storage)": {
            "label": "mapping(uint256 => struct Queue.Object)"
          },
          "t_struct(Object)10996_storage": {
            "label": "struct Queue.Object",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "next",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "validationHash",
                "type": "t_bytes32"
              },
              {
                "label": "executed",
                "type": "t_bool"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1154bfc5b0cbf68b13f39ad337f962042a2f9d6e5587dc6bd4b3e52ada291b07": {
      "address": "0x01e7c629C7F5e3bfb422bf12a0a7415b4aD8958c",
      "txHash": "0xb5652b177d4b4ab06a74d95c618ec6e646dd5f12e2476b44949e97d873bad223",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "Members",
            "label": "auditToken",
            "type": "t_contract(IAuditToken)16040",
            "src": "../project:/contracts/Auditchain/Members.sol:32"
          },
          {
            "contract": "Members",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8237",
            "src": "../project:/contracts/Auditchain/Members.sol:33"
          },
          {
            "contract": "Members",
            "label": "stakedAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:34"
          },
          {
            "contract": "Members",
            "label": "deposits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Members.sol:35"
          },
          {
            "contract": "Members",
            "label": "dataSubscriberCohorts",
            "type": "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)9039_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/Members.sol:36"
          },
          {
            "contract": "Members",
            "label": "dataSubscriberCohortMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/Auditchain/Members.sol:37"
          },
          {
            "contract": "Members",
            "label": "amountTokensPerValidation",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:38"
          },
          {
            "contract": "Members",
            "label": "accessFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:40"
          },
          {
            "contract": "Members",
            "label": "enterpriseShareSubscriber",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:41"
          },
          {
            "contract": "Members",
            "label": "validatorShareSubscriber",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:42"
          },
          {
            "contract": "Members",
            "label": "platformAddress",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/Members.sol:43"
          },
          {
            "contract": "Members",
            "label": "platformShareValidation",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:44"
          },
          {
            "contract": "Members",
            "label": "enterpriseMatch",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:45"
          },
          {
            "contract": "Members",
            "label": "minDepositDays",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:46"
          },
          {
            "contract": "Members",
            "label": "requiredQuorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Members.sol:47"
          },
          {
            "contract": "Members",
            "label": "user",
            "type": "t_mapping(t_address,t_mapping(t_enum(UserType)9118,t_string_storage))",
            "src": "../project:/contracts/Auditchain/Members.sol:50"
          },
          {
            "contract": "Members",
            "label": "userMap",
            "type": "t_mapping(t_address,t_mapping(t_enum(UserType)9118,t_bool))",
            "src": "../project:/contracts/Auditchain/Members.sol:51"
          },
          {
            "contract": "Members",
            "label": "enterprises",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/Members.sol:52"
          },
          {
            "contract": "Members",
            "label": "validators",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/Members.sol:53"
          },
          {
            "contract": "Members",
            "label": "dataSubscribers",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/Members.sol:54"
          }
        ],
        "types": {
          "t_contract(IAuditToken)16040": {
            "label": "contract IAuditToken"
          },
          "t_contract(ICohortFactory)8237": {
            "label": "contract ICohortFactory"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)9039_storage)dyn_storage)": {
            "label": "mapping(address => struct Members.DataSubscriberTypes[])"
          },
          "t_array(t_struct(DataSubscriberTypes)9039_storage)dyn_storage": {
            "label": "struct Members.DataSubscriberTypes[]"
          },
          "t_struct(DataSubscriberTypes)9039_storage": {
            "label": "struct Members.DataSubscriberTypes",
            "members": [
              {
                "label": "cohort",
                "type": "t_address"
              },
              {
                "label": "audits",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_enum(UserType)9118,t_string_storage))": {
            "label": "mapping(address => mapping(enum Members.UserType => string))"
          },
          "t_mapping(t_enum(UserType)9118,t_string_storage)": {
            "label": "mapping(enum Members.UserType => string)"
          },
          "t_enum(UserType)9118": {
            "label": "enum Members.UserType",
            "members": [
              "Enterprise",
              "Validator",
              "DataSubscriber"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_enum(UserType)9118,t_bool))": {
            "label": "mapping(address => mapping(enum Members.UserType => bool))"
          },
          "t_mapping(t_enum(UserType)9118,t_bool)": {
            "label": "mapping(enum Members.UserType => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "78d26fd31b11188e8e4349ea6ec44fb39a8e6dcae35feb01a3ab3194e22deeb6": {
      "address": "0xE029244E25eA24d36de288cfD812114FFf8bcb2b",
      "txHash": "0xe8290e9a04daf469df8792a14ed6f3e480326ca0ba9a401afdac14c7dc0363b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "CohortFactory",
            "label": "minValidatorPerCohort",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:22"
          },
          {
            "contract": "CohortFactory",
            "label": "cohortList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:41"
          },
          {
            "contract": "CohortFactory",
            "label": "cohortMap",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:42"
          },
          {
            "contract": "CohortFactory",
            "label": "validatorCohortList",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_enum(AuditTypes)6485)dyn_storage))",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:43"
          },
          {
            "contract": "CohortFactory",
            "label": "members",
            "type": "t_contract(Members)9512",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:46"
          },
          {
            "contract": "CohortFactory",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9020",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:47"
          },
          {
            "contract": "CohortFactory",
            "label": "invitations",
            "type": "t_mapping(t_address,t_array(t_struct(Invitation)6505_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:48"
          },
          {
            "contract": "CohortFactory",
            "label": "platformAddress",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/CohortFacotory.sol:49"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_enum(AuditTypes)6485)dyn_storage))": {
            "label": "mapping(address => mapping(address => enum CohortFactory.AuditTypes[]))"
          },
          "t_mapping(t_address,t_array(t_enum(AuditTypes)6485)dyn_storage)": {
            "label": "mapping(address => enum CohortFactory.AuditTypes[])"
          },
          "t_array(t_enum(AuditTypes)6485)dyn_storage": {
            "label": "enum CohortFactory.AuditTypes[]"
          },
          "t_enum(AuditTypes)6485": {
            "label": "enum CohortFactory.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5"
            ]
          },
          "t_contract(Members)9512": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)9020": {
            "label": "contract MemberHelpers"
          },
          "t_mapping(t_address,t_array(t_struct(Invitation)6505_storage)dyn_storage)": {
            "label": "mapping(address => struct CohortFactory.Invitation[])"
          },
          "t_array(t_struct(Invitation)6505_storage)dyn_storage": {
            "label": "struct CohortFactory.Invitation[]"
          },
          "t_struct(Invitation)6505_storage": {
            "label": "struct CohortFactory.Invitation",
            "members": [
              {
                "label": "validator",
                "type": "t_address"
              },
              {
                "label": "invitationDate",
                "type": "t_uint256"
              },
              {
                "label": "acceptanceDate",
                "type": "t_uint256"
              },
              {
                "label": "audits",
                "type": "t_enum(AuditTypes)6485"
              },
              {
                "label": "deleted",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23714b992253467fe7a6dbeeb0666e9956f2f132ca3c16b83799dc6bb866c7e2": {
      "address": "0x0924f6a9F148928C9c4119f974b4A4d5c0D9eBB3",
      "txHash": "0xfc4e09a6ea1a075e9ef1f4097b37b9f640c4a8c688a02c967aa0da167b73a7a0",
      "layout": {
        "storage": [
          {
            "contract": "AccessControl",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)4774_storage)",
            "src": "../@openzeppelin/contracts/access/AccessControl.sol:54"
          },
          {
            "contract": "NodeOperations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9020",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:18"
          },
          {
            "contract": "NodeOperations",
            "label": "auditToken",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:19"
          },
          {
            "contract": "NodeOperations",
            "label": "members",
            "type": "t_contract(Members)9512",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:20"
          },
          {
            "contract": "NodeOperations",
            "label": "nodeOperators",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:22"
          },
          {
            "contract": "NodeOperations",
            "label": "CPAs",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:23"
          },
          {
            "contract": "NodeOperations",
            "label": "stakeRatio",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:25"
          },
          {
            "contract": "NodeOperations",
            "label": "stakeRatioDelegating",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:26"
          },
          {
            "contract": "NodeOperations",
            "label": "stakingRatioReferral",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:27"
          },
          {
            "contract": "NodeOperations",
            "label": "nodeOpStruct",
            "type": "t_mapping(t_address,t_struct(nodeOperator)9568_storage)",
            "src": "../project:/contracts/Auditchain/NodeOperations.sol:45"
          }
        ],
        "types": {
          "t_contract(MemberHelpers)9020": {
            "label": "contract MemberHelpers"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Members)9512": {
            "label": "contract Members"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(nodeOperator)9568_storage)": {
            "label": "mapping(address => struct NodeOperations.nodeOperator)"
          },
          "t_struct(nodeOperator)9568_storage": {
            "label": "struct NodeOperations.nodeOperator",
            "members": [
              {
                "label": "isNodeOperator",
                "type": "t_bool"
              },
              {
                "label": "delegations",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "isDelegating",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "stakeAmount",
                "type": "t_uint256"
              },
              {
                "label": "delegateAmount",
                "type": "t_uint256"
              },
              {
                "label": "referralAmount",
                "type": "t_uint256"
              },
              {
                "label": "POWAmount",
                "type": "t_uint256"
              },
              {
                "label": "delegatorLink",
                "type": "t_address"
              },
              {
                "label": "noDelegations",
                "type": "t_bool"
              },
              {
                "label": "isCPA",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)4774_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)4774_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "c7fee691b28d3e2fe7e4b93721d5e39773659a47bdec08ba8162e27d2f2eb72f": {
      "address": "0x9f109C7f786C866F7AA2bb29384dcEDE5ad50b54",
      "txHash": "0x87d73d3f97571f4c6877a72388b4ccc6b801b4f56b1554cc9814c50b1ed5b255",
      "layout": {
        "storage": [
          {
            "contract": "ValidationHelpers",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9020",
            "src": "../project:/contracts/Auditchain/ValidationHelpers.sol:18"
          },
          {
            "contract": "ValidationHelpers",
            "label": "queue",
            "type": "t_contract(IQueue)8386",
            "src": "../project:/contracts/Auditchain/ValidationHelpers.sol:19"
          }
        ],
        "types": {
          "t_contract(MemberHelpers)9020": {
            "label": "contract MemberHelpers"
          },
          "t_contract(IQueue)8386": {
            "label": "contract IQueue"
          }
        }
      }
    },
    "28d6f075a2b1850f042208f36974b97bbd6943238fc1dec77576b750bc4c3dda": {
      "address": "0x6E94f93c14803b330d020bfb67de550A9a5575d5",
      "txHash": "0x3cbebda21365eb6a26dabc130ac46b16026bab7167d8579c8ed24bfc828f9c55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "DepositModifiers",
            "label": "auditToken",
            "type": "t_address",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:28"
          },
          {
            "contract": "DepositModifiers",
            "label": "members",
            "type": "t_contract(Members)9512",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:29"
          },
          {
            "contract": "DepositModifiers",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9020",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:30"
          },
          {
            "contract": "DepositModifiers",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8237",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:31"
          },
          {
            "contract": "DepositModifiers",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8336",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:32"
          },
          {
            "contract": "DepositModifiers",
            "label": "dataSubscriberCohorts",
            "type": "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)7514_storage)dyn_storage)",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:35"
          },
          {
            "contract": "DepositModifiers",
            "label": "dataSubscriberCohortMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "src": "../project:/contracts/Auditchain/DepositModifiers.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(Members)9512": {
            "label": "contract Members"
          },
          "t_contract(MemberHelpers)9020": {
            "label": "contract MemberHelpers"
          },
          "t_contract(ICohortFactory)8237": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8336": {
            "label": "contract INodeOperations"
          },
          "t_mapping(t_address,t_array(t_struct(DataSubscriberTypes)7514_storage)dyn_storage)": {
            "label": "mapping(address => struct DepositModifiers.DataSubscriberTypes[])"
          },
          "t_array(t_struct(DataSubscriberTypes)7514_storage)dyn_storage": {
            "label": "struct DepositModifiers.DataSubscriberTypes[]"
          },
          "t_struct(DataSubscriberTypes)7514_storage": {
            "label": "struct DepositModifiers.DataSubscriberTypes",
            "members": [
              {
                "label": "cohort",
                "type": "t_address"
              },
              {
                "label": "audits",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4467_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4467_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4166_storage"
              }
            ]
          },
          "t_struct(Set)4166_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7a07a2685f8a0d70fe7cfeb562ccd57d0c8fd5198f36640d0b307df6372cd236": {
      "address": "0x3a7b5d35023e10a6dD10fDCC76FfE0E6CBf284f4",
      "txHash": "0xe7da182456ebf2f7acc9d03577ae703250169744d34b01de88453f58b57df6dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(IMembers)8291",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "queue",
            "type": "t_contract(IQueue)8386",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9020",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8191",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8237",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8336",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8438",
            "src": "../project:/contracts/Auditchain/Validations.sol:29"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:31"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)12574",
            "src": "../project:/contracts/Auditchain/Validations.sol:36"
          },
          {
            "contract": "Validations",
            "label": "votes",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:62"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:65"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:66"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)12630_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:69"
          }
        ],
        "types": {
          "t_contract(IMembers)8291": {
            "label": "contract IMembers"
          },
          "t_contract(IQueue)8386": {
            "label": "contract IQueue"
          },
          "t_contract(MemberHelpers)9020": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8191": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8237": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8336": {
            "label": "contract INodeOperations"
          },
          "t_contract(IValidatinosHelpers)8438": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)12574": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(Validation)12630_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)12630_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)12574"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)12581)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)12581)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)12581": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ea3c6207ea583d80b7784124cb369402b0c338b6606d34137dca464cbf258af2": {
      "address": "0x864345c762D25012F5D8E93EbAC13556Bccbfb19",
      "txHash": "0xa4ae1ed2837c5b2f3d129376008aa56ddaa9012de91db0801670817ac0bc21e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "RulesERC721Token",
            "label": "validation",
            "type": "t_contract(ValidationsNoCohort)14123",
            "src": "../project:/contracts/NFT/RulesERC721Token.sol:18"
          },
          {
            "contract": "RulesERC721Token",
            "label": "NFTCompleted",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/NFT/RulesERC721Token.sol:20"
          }
        ],
        "types": {
          "t_contract(ValidationsNoCohort)14123": {
            "label": "contract ValidationsNoCohort"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b120ff1a84a7de2f31770f7bf8699e2166bc12e7cd3416f50fa085aa2cca6eb": {
      "address": "0x8fA803605Ed74cc62AF17FD1eB2bd8dc9253d70d",
      "txHash": "0x005e127648a9c632a2ff8ca01960ec3e4b3fbbb86f83213a21b81658fdab411b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(IMembers)8283",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "queue",
            "type": "t_contract(IQueue)8378",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9012",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8183",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8229",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8328",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8430",
            "src": "../project:/contracts/Auditchain/Validations.sol:29"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:31"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)12566",
            "src": "../project:/contracts/Auditchain/Validations.sol:36"
          },
          {
            "contract": "Validations",
            "label": "votes",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:62"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:65"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:66"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)12622_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:69"
          }
        ],
        "types": {
          "t_contract(IMembers)8283": {
            "label": "contract IMembers"
          },
          "t_contract(IQueue)8378": {
            "label": "contract IQueue"
          },
          "t_contract(MemberHelpers)9012": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8183": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8229": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8328": {
            "label": "contract INodeOperations"
          },
          "t_contract(IValidatinosHelpers)8430": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)12566": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(Validation)12622_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)12622_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)12566"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)12573)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)12573)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)12573": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "081d5c7f5a2ab441687e63c0ece44c298bbaeb40de2874b44d11b531536b7b59": {
      "address": "0xf3285eD63dB360ba28131cAb724b027f7E15063e",
      "txHash": "0xba77942568d79696c92b770d6da738daed64df15de17877733b0a2605907ff34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(IMembers)8283",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "queue",
            "type": "t_contract(IQueue)8378",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9012",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8183",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8229",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8328",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8430",
            "src": "../project:/contracts/Auditchain/Validations.sol:29"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:31"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)12566",
            "src": "../project:/contracts/Auditchain/Validations.sol:36"
          },
          {
            "contract": "Validations",
            "label": "votes",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:62"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:65"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:66"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)12622_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:69"
          }
        ],
        "types": {
          "t_contract(IMembers)8283": {
            "label": "contract IMembers"
          },
          "t_contract(IQueue)8378": {
            "label": "contract IQueue"
          },
          "t_contract(MemberHelpers)9012": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8183": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8229": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8328": {
            "label": "contract INodeOperations"
          },
          "t_contract(IValidatinosHelpers)8430": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)12566": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(Validation)12622_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)12622_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)12566"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)12573)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)12573)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)12573": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "cc7b1808cbee68e5b405ae728d65faa60c56a08e75f29ce91170bb9400ea34ae": {
      "address": "0xe31D74ADccA4394c602AD001605C56A6DF5dc6D5",
      "txHash": "0xc1ecc5360c2af81766eaaf8272069090400151256f3069e8ae16c842ad6f310a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Validations",
            "label": "members",
            "type": "t_contract(IMembers)8283",
            "src": "../project:/contracts/Auditchain/Validations.sol:21"
          },
          {
            "contract": "Validations",
            "label": "queue",
            "type": "t_contract(IQueue)8378",
            "src": "../project:/contracts/Auditchain/Validations.sol:22"
          },
          {
            "contract": "Validations",
            "label": "memberHelpers",
            "type": "t_contract(MemberHelpers)9012",
            "src": "../project:/contracts/Auditchain/Validations.sol:23"
          },
          {
            "contract": "Validations",
            "label": "depositModifiers",
            "type": "t_contract(DepositModifiers)8183",
            "src": "../project:/contracts/Auditchain/Validations.sol:24"
          },
          {
            "contract": "Validations",
            "label": "cohortFactory",
            "type": "t_contract(ICohortFactory)8229",
            "src": "../project:/contracts/Auditchain/Validations.sol:25"
          },
          {
            "contract": "Validations",
            "label": "nodeOperations",
            "type": "t_contract(INodeOperations)8328",
            "src": "../project:/contracts/Auditchain/Validations.sol:26"
          },
          {
            "contract": "Validations",
            "label": "validationHelpers",
            "type": "t_contract(IValidatinosHelpers)8430",
            "src": "../project:/contracts/Auditchain/Validations.sol:29"
          },
          {
            "contract": "Validations",
            "label": "outstandingValidations",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Auditchain/Validations.sol:31"
          },
          {
            "contract": "Validations",
            "label": "audits",
            "type": "t_enum(AuditTypes)12566",
            "src": "../project:/contracts/Auditchain/Validations.sol:36"
          },
          {
            "contract": "Validations",
            "label": "votes",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "../project:/contracts/Auditchain/Validations.sol:61"
          },
          {
            "contract": "Validations",
            "label": "activeOperatorsStake",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "src": "../project:/contracts/Auditchain/Validations.sol:62"
          },
          {
            "contract": "Validations",
            "label": "recentTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:64"
          },
          {
            "contract": "Validations",
            "label": "recentValidationHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Auditchain/Validations.sol:65"
          },
          {
            "contract": "Validations",
            "label": "quorum",
            "type": "t_uint256",
            "src": "../project:/contracts/Auditchain/Validations.sol:66"
          },
          {
            "contract": "Validations",
            "label": "validations",
            "type": "t_mapping(t_bytes32,t_struct(Validation)12622_storage)",
            "src": "../project:/contracts/Auditchain/Validations.sol:69"
          }
        ],
        "types": {
          "t_contract(IMembers)8283": {
            "label": "contract IMembers"
          },
          "t_contract(IQueue)8378": {
            "label": "contract IQueue"
          },
          "t_contract(MemberHelpers)9012": {
            "label": "contract MemberHelpers"
          },
          "t_contract(DepositModifiers)8183": {
            "label": "contract DepositModifiers"
          },
          "t_contract(ICohortFactory)8229": {
            "label": "contract ICohortFactory"
          },
          "t_contract(INodeOperations)8328": {
            "label": "contract INodeOperations"
          },
          "t_contract(IValidatinosHelpers)8430": {
            "label": "contract IValidatinosHelpers"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(AuditTypes)12566": {
            "label": "enum Validations.AuditTypes",
            "members": [
              "Unknown",
              "Financial",
              "System",
              "NFT",
              "Type4",
              "Type5",
              "Type6"
            ]
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(Validation)12622_storage)": {
            "label": "mapping(bytes32 => struct Validations.Validation)"
          },
          "t_struct(Validation)12622_storage": {
            "label": "struct Validations.Validation",
            "members": [
              {
                "label": "cohort",
                "type": "t_bool"
              },
              {
                "label": "requestor",
                "type": "t_address"
              },
              {
                "label": "validationTime",
                "type": "t_uint256"
              },
              {
                "label": "executionTime",
                "type": "t_uint256"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "consensus",
                "type": "t_uint256"
              },
              {
                "label": "validationsCompleted",
                "type": "t_uint256"
              },
              {
                "label": "auditType",
                "type": "t_enum(AuditTypes)12566"
              },
              {
                "label": "validatorChoice",
                "type": "t_mapping(t_address,t_enum(ValidationStatus)12573)"
              },
              {
                "label": "validatorTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationUrl",
                "type": "t_mapping(t_address,t_string_storage)"
              },
              {
                "label": "winnerVotesPlus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "winnerVotesMinus",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "validationHash",
                "type": "t_mapping(t_address,t_bytes32)"
              },
              {
                "label": "winnerConfirmations",
                "type": "t_uint64"
              },
              {
                "label": "winner",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_enum(ValidationStatus)12573)": {
            "label": "mapping(address => enum Validations.ValidationStatus)"
          },
          "t_enum(ValidationStatus)12573": {
            "label": "enum Validations.ValidationStatus",
            "members": [
              "Undefined",
              "Yes",
              "No"
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
